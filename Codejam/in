    # if (b == 20):
    #     # 1 - 10
    #     temp_final = ''
    #     for m in range(1, 11):
    #         print(m)
    #         sys.stdout.flush()
    #         t = input()
    #         bits += t
    #
    #     # 11 - 20
    #     bp = 0
    #     for m in range(1, 11):
    #         print(m)
    #         sys.stdout.flush()
    #         t = input()
    #         if (t == '0' and bits[m - 1] != '1') or (t == '1' and bits[m - 1] != '0'):
    #             C = False
    #         if (t == '0' and bits[m - 1] != '0') or (t == '1' and bits[m - 1] != '1'):
    #             Nothing = False
    #
    #         if (t == '0' and bits[10 - m] != '0') or (t == '1' and bits[10 - m] != '1'):
    #             R = False
    #         if (t == '0' and bits[10 - m] != '1') or (t == '1' and bits[10 - m] != '0'):
    #             CR = False
    #
    #         if [R, C, CR, Nothing].count(True) == 1:
    #             if R:
    #                 temp_final = (bits[::-1])
    #             elif C:
    #                 for e in range(b):
    #                     if bits[e] == '0':
    #                         temp_final += '1'
    #                     else:
    #                         temp_final += '0'
    #             elif CR:
    #                 for e in range(b):
    #                     if bits[e] == '0':
    #                         temp_final += '1'
    #                     else:
    #                         temp_final += '0'
    #             else:
    #                 temp_final = bits
    #         bp = m + 1
    #         break
    #
    #     temp_final_2 = ''
    #     k = 11
    #     for i in (bp, 11):
    #         print(k)
    #         k += 1
    #         t = input()
    #         temp_final += t
    #         sys.stdout.flush()
    #
    #     R = True
    #     C = True
    #     CR = True
    #     Nothing = True
    #
    #     # 20 queries complete
    #
    #     bp = 0
    #     for m in range(0, 11):
    #         print(m)
    #         sys.stdout.flush()
    #         t = input()
    #         if (t == '0' and bits[m - 1] != '1') or (t == '1' and bits[m - 1] != '0'):
    #             C = False
    #         if (t == '0' and bits[m - 1] != '0') or (t == '1' and bits[m - 1] != '1'):
    #             Nothing = False
    #
    #         if (t == '0' and bits[b - m] != '0') or (t == '1' and bits[b - m] != '1'):
    #             R = False
    #         if (t == '0' and bits[b - m] != '1') or (t == '1' and bits[b - m] != '0'):
    #             CR = False
    #
    #         bp = m+1
    #         break
    #
    #     if R:
